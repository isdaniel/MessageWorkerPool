name: .NET
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src

    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ./src

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
      working-directory: src/tests/MessageWorkerPool.Test

    - name: Package Release Artifacts
      run: |
        mkdir -p release
        cp -r ./MessageWorkerPool/bin/Release/* release/
      working-directory: ./src

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: ./src/release/

    - name: Pack NuGet Package
      run: dotnet pack --no-build --configuration Release --output ./nupkg
      working-directory: ./src

    - name: Publish NuGet Package
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        OUTPUT=$(dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate 2>&1)
        echo "$OUTPUT"

        if echo "$OUTPUT" | grep -q "already exists at feed"; then
          echo "NUGET_PUSH_SUCCESS=false" >> $GITHUB_ENV
        else
          echo "NUGET_PUSH_SUCCESS=true" >> $GITHUB_ENV
        fi
      working-directory: ./src

    - name: Create Git Tag
      if: env.NUGET_PUSH_SUCCESS == 'true'
      run: |
        PACKAGE_FILE=$(ls ./src/nupkg/*.nupkg | head -1)
        PACKAGE_VERSION=$(echo "$PACKAGE_FILE" | grep -oP '(?<=MessageWorkerPool\.)\d+\.\d+\.\d+(?:\.\d+)?(?:-[a-zA-Z0-9]+)?')
        if [ -n "$PACKAGE_VERSION" ]; then
          TAG_NAME="$PACKAGE_VERSION"
          echo "Creating tag: $TAG_NAME"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
        else
          echo "Package version could not be determined."
          exit 1
        fi
