version: '3.8'
services:
  myrabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq-server
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      start_period: 10s
      interval: 30s
      timeout: 30s
      retries: 3
    command: rabbitmq-server
    expose:
      - 5672
      - 15672
    networks:
      - net-mq
  publisher:
    # build: ./Publisher/
    image: dog830228/mq_poc-publisher
    env_file: ./env/.env
    depends_on:
      myrabbitmq:
        condition: service_healthy
    networks:
      - net-mq
  workersample:
    #build: ./examples_worker/python
    #build: ./examples_worker/dotnet
    build:
      context: .
      dockerfile: ./src/Examples/DotNetWorker/Dockerfile
    #build: ./examples_worker/rust
    #stop_grace_period: 120s
    env_file: ./env/.env
    ports:
      - "9464:9464"
    depends_on:
      - publisher
      - otel-collector
    networks:
      - net-mq
  sqlserver:
    image: dog830228/silo-db:1.1
    hostname: sqlsever
    ports:
      - "1433:1433"
    restart: always
    networks:
      - net-mq
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: 'test.123'
      MSSQL_PID: 'Standard'
  siloweb:
    #build: ./MQDashBoard/Silo/
    image: dog830228/silo-server:1.1
    ports:
      - "8899:8899"
    expose:
      - "8899"
    restart: always
    environment:
      DBConnection: 'Data Source=sqlserver;Initial Catalog=orleans;User ID=sa;Password=test.123;'
    networks:
      - net-mq
    depends_on:
      - sqlserver

  # OpenTelemetry Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - net-mq
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # HTTP collector
      - "14250:14250"   # gRPC collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - net-mq
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./monitoring/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "8888:8888"     # Prometheus metrics
      - "8889:8889"     # Prometheus exporter metrics
    depends_on:
      - prometheus
      - jaeger
    networks:
      - net-mq
    restart: unless-stopped
networks:
  net-mq:
    driver: bridge

volumes:
  prometheus_data:




