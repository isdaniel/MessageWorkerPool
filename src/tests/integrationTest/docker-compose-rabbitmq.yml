version: '3.8'
services:
  myrabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq-server
    restart: always
    ports:
      - "8888:15672"
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      start_period: 10s
      interval: 30s
      timeout: 30s
      retries: 3
    command: rabbitmq-server
    expose:
      - 5672
      - 15672
    networks:
      - net-mq
  envpreparatory:
    build: ./message_client
    env_file: ./rabbitmq/env/.env
    depends_on:
      myrabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - net-mq
  tradeworker:
    build:
      context: ../../
      dockerfile: ./tests/integrationTest/trade_worker/Dockerfile
    stop_grace_period: 300s
    env_file: ./rabbitmq/env/.env
    depends_on:
      - envpreparatory
    networks:
      - net-mq
  postgres:
    image: postgres:16
    hostname: postgres-server
    ports:
      - "9999:5432"
    restart: always
    networks:
      - net-mq
    environment:
      POSTGRES_PASSWORD: 'test.123'
      POSTGRES_USER: 'postgres'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
networks:
  net-mq:
    driver: bridge




